        <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
            <property name="hostName" value="${redis.server.host}" />
            <property name="port" value="${redis.server.port}" />
            <property name="timeout" value="${redis.timeout}" />
            <property name="usePool" value="true" />
            <property name="password" value="" />
            <property name="poolConfig" ref="redisPoolConfig" />
        </bean>
        <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
            <property name="minIdle" value="${redis.pool.minIdle}" />
            <property name="maxIdle" value="${redis.pool.maxIdle}" />
            <property name="maxWait" value="${redis.pool.maxWaitMillis}" />
            <property name="testOnBorrow" value="true" />
            <property name="minEvictableIdleTimeMillis" value="60000" />
            <property name="softMinEvictableIdleTimeMillis" value="1800000" />
            <property name="numTestsPerEvictionRun" value="-1" />
            <property name="testOnReturn" value="false" />
            <property name="testWhileIdle" value="true" />
            <property name="timeBetweenEvictionRunsMillis" value="30000" />
        </bean>
<!-- string serializer to make redis key more readible-->
        <bean id="stringRedisSerializer" 
            class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
<!-- redis template definition -->
        <bean id="redisTemplate"
              class="org.springframework.data.redis.core.RedisTemplate"
              p:connection-factory-ref="jedisConnectionFactory"
              p:keySerializer-ref="stringRedisSerializer"
              p:hashKeySerializer-ref="stringRedisSerializer"/>
<bean id="cacheService" class="CacheServiceImpl"/>
